@using Simple_CSharp_Games.Models
@using Simple_CSharp_Games.Models.FinalBattle

<div class="finalbattle-game-container">
	<h3>@GameTitle</h3>

	@if ( finalBattle.BattlePhase == BattlePhase.Setup )
	{
		<button class="btn btn-primary" @onclick="StartGame">Test Start</button>
	}

	@if (finalBattle.BattlePhase == BattlePhase.HeroAwaitInput && finalBattle._battleGame.Winner == null)
	{
		<button class="btn btn-primary" @onclick="HeroesTurn">Test Heroes</button>
	}

	@if (finalBattle.BattlePhase == BattlePhase.MonsterResolving && finalBattle._battleGame.Winner == null)
	{
		<button class="btn btn-primary" @onclick="MonstersTurn">Test Monsters</button>
	}

	<div class="battle-messages-container">
		@for (int i = 0; i < battleLog?.Count; i++)
		{
			var message = battleLog[i];
			<p>@message</p>
		}
	</div>

</div>

@code {
	private string GameTitle = "The Final Battle";

	Game battleGame = new Game();

	BattleGameState finalBattle = new BattleGameState();

	private string? heroName;

	private List<string>? messageLog;

	private List<string>? battleLog;


	private void StartGame()
	{
		heroName = "Game State Test";

		if (heroName != null)
			finalBattle.SetUp(heroName);

		battleLog = finalBattle.BattleLog;
	}

	private void HeroesTurn()
	{
		finalBattle.ResolveHeroAction("punch", "0");
	}

	private void MonstersTurn()
	{
		finalBattle.ResolveMonsterTurn();
	}
}
